#!/bin/bash

# Firestore Fixes Verification Script
# Run this after deploying Firebase rules and indexes

echo "üîç FIRESTORE FIXES VERIFICATION SCRIPT"
echo "======================================"
echo ""

# Color codes
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m'

# Test status variables
RULES_STATUS="‚ùì"
INDEXES_STATUS="‚ùì"
BUILD_STATUS="‚ùì"
DEPLOY_STATUS="‚ùì"

echo -e "${BLUE}üìã Verification Checklist:${NC}"
echo "1. ‚úÖ Check Firebase deployment status"
echo "2. ‚úÖ Verify Firestore rules are active"
echo "3. ‚úÖ Confirm all 14 indexes are built"
echo "4. ‚úÖ Test Flutter project builds without errors"
echo "5. ‚úÖ Validate group and conversation operations"
echo ""

# Check if Firebase CLI is available
if command -v firebase &> /dev/null; then
    echo -e "${GREEN}‚úÖ Firebase CLI available${NC}"
    
    # Check current project
    echo -e "${YELLOW}üîç Checking Firebase project...${NC}"
    CURRENT_PROJECT=$(firebase projects:list 2>/dev/null | grep "abdifahadi-raabta" | head -n1 || echo "")
    
    if [[ $CURRENT_PROJECT == *"abdifahadi-raabta"* ]]; then
        echo -e "${GREEN}‚úÖ Correct Firebase project selected: abdifahadi-raabta${NC}"
        DEPLOY_STATUS="‚úÖ"
    else
        echo -e "${RED}‚ùå Wrong project or not authenticated. Run: firebase use abdifahadi-raabta${NC}"
        DEPLOY_STATUS="‚ùå"
    fi
    
    # Check rules deployment status
    echo -e "${YELLOW}üîç Checking Firestore rules status...${NC}"
    if firebase firestore:rules 2>/dev/null | grep -q "rules_version"; then
        RULES_STATUS="‚úÖ"
        echo -e "${GREEN}‚úÖ Firestore rules are deployed and accessible${NC}"
        
        # Check if our specific rule fixes are present
        if firebase firestore:rules 2>/dev/null | grep -q "resource == null"; then
            echo -e "${GREEN}‚úÖ Updated rules with null resource handling detected${NC}"
        else
            echo -e "${YELLOW}‚ö†Ô∏è  Rules may be outdated - redeploy with: firebase deploy --only firestore:rules${NC}"
        fi
    else
        RULES_STATUS="‚ùå"
        echo -e "${RED}‚ùå Cannot access Firestore rules - redeploy required${NC}"
    fi
    
    # Check indexes status
    echo -e "${YELLOW}üîç Checking Firestore indexes...${NC}"
    # Note: Firebase CLI doesn't provide a direct way to check index status
    # This requires manual verification in Firebase Console
    echo -e "${CYAN}üìù To verify indexes, check Firebase Console:${NC}"
    echo "   üîó https://console.firebase.google.com/project/abdifahadi-raabta/firestore/indexes"
    echo ""
    echo -e "${BLUE}Expected 14 indexes:${NC}"
    echo "   1. conversations: participants + updatedAt"
    echo "   2. conversations: participants + createdAt" 
    echo "   3. conversations: participants + lastMessageTime"
    echo "   4. groups: members + updatedAt"
    echo "   5. groups: members + createdAt"
    echo "   6. groups: members + lastMessageTime"
    echo "   7. messages (collection-group): timestamp DESC"
    echo "   8. messages (collection): timestamp DESC"
    echo "   9. messages (collection): timestamp ASC"
    echo "   10. callSessions: callerId + createdAt"
    echo "   11. callSessions: receiverId + createdAt"
    echo "   12. callSessions: status + createdAt"
    echo "   13. notifications: userId + createdAt"
    echo "   14. notifications: userId + isRead + createdAt"
    echo ""
    INDEXES_STATUS="‚è≥"
    
else
    echo -e "${RED}‚ùå Firebase CLI not available${NC}"
    DEPLOY_STATUS="‚ùå"
fi

# Check Flutter build
echo -e "${YELLOW}üîç Checking Flutter project build...${NC}"
if command -v flutter &> /dev/null; then
    echo -e "${GREEN}‚úÖ Flutter SDK available${NC}"
    
    # Clean and get dependencies
    echo -e "${YELLOW}üßπ Cleaning Flutter project...${NC}"
    flutter clean > /dev/null 2>&1
    flutter pub get > /dev/null 2>&1
    
    # Try to analyze the project
    echo -e "${YELLOW}üîç Running Flutter analyze...${NC}"
    if flutter analyze --no-fatal-infos > /tmp/flutter_analyze.log 2>&1; then
        BUILD_STATUS="‚úÖ"
        echo -e "${GREEN}‚úÖ Flutter analysis passed${NC}"
    else
        BUILD_STATUS="‚ö†Ô∏è"
        echo -e "${YELLOW}‚ö†Ô∏è  Flutter analysis has warnings (check /tmp/flutter_analyze.log)${NC}"
    fi
else
    echo -e "${RED}‚ùå Flutter SDK not available${NC}"
    BUILD_STATUS="‚ùå"
fi

echo ""
echo -e "${PURPLE}üìä VERIFICATION SUMMARY:${NC}"
echo "Firebase Project: $DEPLOY_STATUS"
echo "Firestore Rules: $RULES_STATUS"
echo "Firestore Indexes: $INDEXES_STATUS (Manual verification required)"
echo "Flutter Build: $BUILD_STATUS"
echo ""

echo -e "${CYAN}üß™ MANUAL TESTING INSTRUCTIONS:${NC}"
echo ""
echo -e "${YELLOW}1. üë• GROUP FUNCTIONALITY TEST:${NC}"
echo "   a) Open your Flutter app"
echo "   b) Navigate to Groups tab"
echo "   c) ‚úÖ Should load without [failed-precondition] errors"
echo "   d) Create a new group with 2+ members"
echo "   e) ‚úÖ Group should appear in list immediately"
echo "   f) Send a message in the group"
echo "   g) ‚úÖ Message should appear without errors"
echo ""

echo -e "${YELLOW}2. üí¨ CONVERSATION DELETE TEST:${NC}"
echo "   a) Open any existing conversation"
echo "   b) Go to conversation settings (‚öôÔ∏è icon)"
echo "   c) Tap 'Delete Conversation'"
echo "   d) Confirm deletion"
echo "   e) ‚úÖ Should delete without [permission-denied] errors"
echo "   f) ‚úÖ Conversation should disappear from list"
echo "   g) ‚úÖ All messages should be deleted"
echo ""

echo -e "${YELLOW}3. üì± CROSS-PLATFORM VERIFICATION:${NC}"
echo "   a) Test on Flutter Web:"
echo "      ‚Ä¢ flutter build web"
echo "      ‚Ä¢ firebase serve --only hosting"
echo "      ‚Ä¢ Open localhost:5000"
echo "      ‚Ä¢ ‚úÖ No console errors related to Firestore"
echo ""
echo "   b) Test on Android (if available):"
echo "      ‚Ä¢ flutter build apk"
echo "      ‚Ä¢ Install and test APK"
echo "      ‚Ä¢ ‚úÖ Groups tab loads properly"
echo "      ‚Ä¢ ‚úÖ Conversation delete works"
echo ""
echo "   c) Test on Desktop (if available):"
echo "      ‚Ä¢ flutter build linux/windows/macos"
echo "      ‚Ä¢ Run the built executable"
echo "      ‚Ä¢ ‚úÖ All Firestore operations work"
echo ""

echo -e "${YELLOW}4. üîç CONSOLE ERROR CHECK:${NC}"
echo "   a) Open browser developer tools (F12)"
echo "   b) Navigate through the app"
echo "   c) ‚úÖ Should see NO errors containing:"
echo "      ‚Ä¢ [cloud_firestore/failed-precondition]"
echo "      ‚Ä¢ [cloud_firestore/permission-denied]"
echo "      ‚Ä¢ 'index does not exist'"
echo "      ‚Ä¢ 'insufficient permissions'"
echo ""

echo -e "${RED}‚ùå TROUBLESHOOTING IF TESTS FAIL:${NC}"
echo ""
echo "If Groups tab still shows index errors:"
echo "‚Ä¢ Wait 5-15 minutes for indexes to build completely"
echo "‚Ä¢ Check Firebase Console indexes page for 'Building...' status"
echo "‚Ä¢ Redeploy indexes: firebase deploy --only firestore:indexes"
echo ""
echo "If conversation delete still fails:"
echo "‚Ä¢ Redeploy rules: firebase deploy --only firestore:rules"
echo "‚Ä¢ Clear browser cache and local storage"
echo "‚Ä¢ Restart the Flutter app completely"
echo ""
echo "If errors persist:"
echo "‚Ä¢ Check Firebase Console > Project Settings > General"
echo "‚Ä¢ Verify Project ID is exactly 'abdifahadi-raabta'"
echo "‚Ä¢ Ensure correct Firebase user account is logged in"
echo "‚Ä¢ Wait 2-3 minutes for global propagation"
echo ""

echo -e "${GREEN}‚úÖ SUCCESS CRITERIA:${NC}"
echo "All fixes are working correctly when:"
echo "‚Ä¢ Groups tab loads instantly without errors"
echo "‚Ä¢ Group creation and messaging work smoothly"
echo "‚Ä¢ Conversation deletion completes without permission errors"
echo "‚Ä¢ No Firestore-related errors in browser console"
echo "‚Ä¢ App works consistently across Web, Android, and Desktop"
echo ""

echo -e "${BLUE}üîó HELPFUL FIREBASE CONSOLE LINKS:${NC}"
echo "‚Ä¢ Rules: https://console.firebase.google.com/project/abdifahadi-raabta/firestore/rules"
echo "‚Ä¢ Indexes: https://console.firebase.google.com/project/abdifahadi-raabta/firestore/indexes"
echo "‚Ä¢ Data: https://console.firebase.google.com/project/abdifahadi-raabta/firestore/data"
echo "‚Ä¢ Usage: https://console.firebase.google.com/project/abdifahadi-raabta/firestore/usage"
echo ""

if [[ $RULES_STATUS == "‚úÖ" && $BUILD_STATUS == "‚úÖ" && $DEPLOY_STATUS == "‚úÖ" ]]; then
    echo -e "${GREEN}üéâ READY FOR TESTING! All prerequisites verified.${NC}"
    echo -e "${YELLOW}Proceed with manual testing steps above.${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  Some prerequisites failed. Address the issues above before testing.${NC}"
fi

echo ""
echo -e "${PURPLE}üìù Next Steps:${NC}"
echo "1. Complete manual testing as outlined above"
echo "2. Report any remaining issues with specific error messages"
echo "3. If all tests pass, the Firestore fixes are successfully deployed!"