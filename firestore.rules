rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Users collection - profiles and authentication data
    match /users/{userId} {
      // Anyone authenticated can read user profiles (for searching users to chat with)
      allow read: if request.auth != null;
      
      // Only the user themselves can write to their profile
      // OR during sign-in process (allow creation for any authenticated user)
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update: if request.auth != null && request.auth.uid == userId;
      allow delete: if request.auth != null && request.auth.uid == userId;
    }
    
    // Conversations collection
    match /conversations/{conversationId} {
      // Only participants can read conversation metadata
      allow read: if request.auth != null && 
        request.auth.uid in resource.data.participants;
      
      // Only participants can create/update conversations
      allow create: if request.auth != null && 
        request.auth.uid in request.resource.data.participants &&
        request.resource.data.participants.size() == 2;
        
      allow update: if request.auth != null && 
        request.auth.uid in resource.data.participants &&
        request.resource.data.participants == resource.data.participants;
      
      // Prevent conversation deletion
      allow delete: if false;
      
      // Messages subcollection
      match /messages/{messageId} {
        // Only conversation participants can read messages
        allow read: if request.auth != null && 
          request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.participants;
        
        // Only sender can create messages, and they must be a participant
        allow create: if request.auth != null && 
          request.auth.uid == request.resource.data.senderId &&
          request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.participants;
        
        // Only sender can update their own messages
        allow update: if request.auth != null && 
          request.auth.uid == resource.data.senderId &&
          request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.participants;
        
        // Only sender can delete their own messages
        allow delete: if request.auth != null && 
          request.auth.uid == resource.data.senderId;
      }
    }
    
    // Helper match for any other collections that might be added
    match /{document=**} {
      // Default: authenticated users can read, but cannot write unless explicitly allowed above
      allow read: if request.auth != null;
      allow write: if false;
    }
  }
}